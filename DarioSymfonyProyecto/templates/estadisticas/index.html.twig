{% extends 'base.html.twig' %}

{% block title %}Estadísticas{% endblock %}
{% block stylesheets %}
    {{ parent() }} 
    <link rel="stylesheet" href="{{ asset('estilos/stylesGraficos.css') }}">

{% endblock %}

{% block body %}
<div class="container">
    <h1>Estadísticas</h1>

    <!-- Gráfico 1: Playlist con más likes -->
    <div class="chart-container">
        <h2>Playlist y likes</h2>
        <canvas id="playlistLikesChart"></canvas>
    </div>

    <!-- Gráfico 2: Playlist con más reproducciones -->
    <div class="chart-container">
        <h2>Playlist y reproducciones</h2>
        <canvas id="playlistReproduccionesChart"></canvas>
    </div>

    <!-- Gráfico 3: Distribución de edades de usuarios -->
    <div class="chart-container">
        <h2>Grafico de usuarios por edad</h2>
        <canvas id="usuarioEdadesChart"></canvas>
    </div>

    <!-- Gráfico 4: Canciones más reproducidas -->
    <div class="chart-container">
        <h2>Canciones y reproducciones</h2>
        <canvas id="cancionReproduccionesChart"></canvas>
    </div>

    <!-- Gráfico 5: Distribución de reproducción por estilos -->
    <div class="chart-container">
        <h2>Comparacion de estilos en base a reproducciones</h2>
        <canvas id="estiloReproduccionesChart"></canvas>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Gráfico 1: Playlist con más likes
        fetch("{{ path('estadisticas_playlist_likes') }}")
            .then(response => response.json())
            .then(data => {
                const labels = data.map(item => item.nombre);
                const values = data.map(item => item.likes);

                const ctx = document.getElementById('playlistLikesChart').getContext('2d');
                new Chart(ctx, {
                    type: 'polarArea',
                    data: {
                        labels: labels,
                        datasets: [{
                            label: 'Total Likes',
                            data: values,
                            backgroundColor: 'rgba(75, 192, 192, 0.2)',
                            borderColor: 'rgba(75, 192, 192, 1)',
                            borderWidth: 1
                        }]
                    },
                    options: {
                        responsive: true,
                        scales: {
                            y: {
                                beginAtZero: true
                            }
                        }
                    }
                });
            });

        // Gráfico 2: Playlist con más reproducciones
        fetch("{{ path('estadisticas_playlist_reproducciones') }}")
            .then(response => response.json())
            .then(data => {
                const labels = data.map(item => item.nombre);
                const values = data.map(item => item.reproducciones);

                const ctx = document.getElementById('playlistReproduccionesChart').getContext('2d');
                new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: labels,
                        datasets: [{
                            label: 'Total Reproducciones',
                            data: values,
                            backgroundColor: 'rgba(153, 102, 255, 0.2)',
                            borderColor: 'rgba(153, 102, 255, 1)',
                            borderWidth: 1
                        }]
                    },
                    options: {
                        responsive: true,
                        scales: {
                            y: {
                                beginAtZero: true
                            }
                        }
                    }
                });
            });

        // Gráfico 3: Distribución de edades de usuarios
        fetch("{{ path('estadisticas_usuario_edades') }}")
            .then(response => response.json())
            .then(data => {
                const labels = data.map(item => item.rango);
                const values = data.map(item => item.cantidad);

                const ctx = document.getElementById('usuarioEdadesChart').getContext('2d');
                new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: labels,
                        datasets: [{
                            label: 'Cantidad de usuarios',
                            data: values,
                            backgroundColor: 'rgba(255, 159, 64, 0.2)',
                            borderColor: 'rgba(255, 159, 64, 1)',
                            borderWidth: 1
                        }]
                    },
                    options: {
                        responsive: true,
                        scales: {
                            y: {
                                beginAtZero: true
                            }
                        }
                    }
                });
            });

        // Gráfico 4: Canciones más reproducidas
        fetch("{{ path('estadisticas_cancion_reproducciones') }}")
            .then(response => response.json())
            .then(data => {
                const labels = data.map(item => item.titulo);
                const values = data.map(item => item.reproducciones);

                const ctx = document.getElementById('cancionReproduccionesChart').getContext('2d');
                new Chart(ctx, {
                    type: 'doughnut',
                    data: {
                        labels: labels,
                        datasets: [{
                            label: 'Total Reproducciones',
                            data: values,
                            backgroundColor: 'rgba(54, 162, 235, 0.2)',
                            borderColor: 'rgba(54, 162, 235, 1)',
                            borderWidth: 1
                        }]
                    },
                    options: {
                        responsive: true,
                        scales: {
                            y: {
                                beginAtZero: true
                            }
                        }
                    }
                });
            });

        // Gráfico 5: Distribución de reproducción por estilos
        fetch("{{ path('estadisticas_estilo_reproducciones') }}")
            .then(response => response.json())
            .then(data => {
                const labels = data.map(item => item.estilo);
                const values = data.map(item => item.totalReproducciones);

                const ctx = document.getElementById('estiloReproduccionesChart').getContext('2d');
                new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: labels,
                        datasets: [{
                            label: 'Total Reproducciones',
                            data: values,
                            backgroundColor: 'rgba(255, 99, 132, 0.2)',
                            borderColor: 'rgba(255, 99, 132, 1)',
                            borderWidth: 1
                        }]
                    },
                    options: {
                        responsive: true,
                        scales: {
                            y: {
                                beginAtZero: true
                            }
                        }
                    }
                });
            });
    });
</script>
{% endblock %}